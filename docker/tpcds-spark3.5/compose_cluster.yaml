services:
  spark-master:
    image: spark-tuning-spark3.5:latest
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 9870
        published: 9870
        protocol: tcp
        mode: host
      - target: 7077
        published: 7077
        protocol: tcp
        mode: host
      - target: 9000
        published: 9000
        protocol: tcp
        mode: host
    networks:
      - cluster-net
    command: /bin/bash -c "/opt/spark/sbin/start-master.sh && service ssh start && echo 'Y' | /opt/hadoop/bin/hdfs namenode -format && /opt/hadoop/sbin/start-dfs.sh && tail -f /dev/null"
    # mem_limit: 10g
    # cpus: 5
    deploy:
      mode: global # Required by Docker Swarm to make published ports work with other services
      endpoint_mode: dnsrr # Required to prevent java.net.ConnectException
      placement:
        constraints:
          - node.role == manager
        max_replicas_per_node: 1
      resources:
        limits:
          memory: 10g
          cpus: '5'

  spark-worker:
    image: spark-tuning-spark3.5:latest
    command: /bin/bash -c "/opt/spark/sbin/start-worker.sh spark://spark-master:7077;  tail -f /dev/null"
    depends_on:
      - spark-master
    # scale: 3
    # mem_limit: 70g
    # cpus: 10
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 1
      resources:
        limits:
          memory: 70g
          cpus: '10'
    # scale: 3
    # mem_limit: 70g
    # cpus: 10
    networks:
      - cluster-net

  tpcds:
    image: spark-tuning-spark3.5-tpcds:latest
    build: .
    command: /bin/bash -c "tail -f /dev/null"
    # mem_limit: 10g
    # cpus: 5
    ports:
      - "4040:4040"
    depends_on:
      - spark-master
      - spark-worker
    volumes:
      - /mnt/spark_tuning:/mnt/spark_tuning
    deploy:
      placement:
        constraints:
          - node.role == manager
        max_replicas_per_node: 1
      resources:
        limits:
          memory: 10g
          cpus: '5'
    networks:
      - cluster-net
networks:
  cluster-net:
    external: true
    name: cluster_net_swarm